{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["StoreContext","createContext","bugs","addBug","bug","StoreProvider","children","store","useLocalStore","push","length","Provider","value","BugsHeader","useContext","useObserver","bugsCount","BugsList","map","BugsForm","useState","setBug","onSubmit","e","preventDefault","type","onChange","target","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKMA,EAAeC,wBAAc,CACjCC,KAAM,CAAC,aACPC,OAAQ,SAACC,KACT,gBAAyB,OAAO,KAG5BC,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,SAChBC,EAAQC,aAAc,iBAAO,CACjCN,KAAM,CAAC,aACPC,OAAQ,SAACC,GACPG,EAAML,KAAKO,KAAKL,IAElB,gBACE,OAAOG,EAAML,KAAKQ,YAItB,OACE,cAACV,EAAaW,SAAd,CAAuBC,MAAOL,EAA9B,SACGD,KAKDO,EAAa,WACjB,IAAMN,EAAQO,qBAAWd,GAEzB,OAAOe,aAAY,kBACjB,+BACGR,EAAMS,UADT,IACqBT,EAAMS,UAAY,EAAI,QAAU,cAKnDC,EAAW,WACf,IAAMV,EAAQO,qBAAWd,GAEzB,OAAOe,aAAY,kBACjB,6BACGR,EAAML,KAAKgB,KAAI,SAAAd,GAAG,OACjB,6BAAeA,GAANA,YAMXe,EAAW,WACf,IAAMZ,EAAQO,qBAAWd,GADJ,EAECoB,mBAAS,IAFV,mBAEdhB,EAFc,KAETiB,EAFS,KAIrB,OACE,uBACEC,SAAU,SAAAC,GACRhB,EAAMJ,OAAOC,GACbiB,EAAO,IACPE,EAAEC,kBAJN,UAOE,uBAAOC,KAAK,OAAOb,MAAOR,EAAKsB,SAAU,SAAAH,GACvCF,EAAOE,EAAEI,OAAOf,UAElB,wBAAQa,KAAM,SAAd,qBAoBSG,MAff,WAEE,OACE,cAAC,EAAD,UACE,qBAAKC,UAAU,MAAf,SACE,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCjEKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2becdacb.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useLocalStore, useObserver } from 'mobx-react'\n\nconst StoreContext = createContext({\n  bugs: ['Centipede'],\n  addBug: (bug: string) => {},\n  get bugsCount(): number {return 0}\n});\n\nconst StoreProvider = ({children}: any) => {\n  const store = useLocalStore(() => ({\n    bugs: ['Centipede'],\n    addBug: (bug: string) => {\n      store.bugs.push(bug);\n    },\n    get bugsCount() {\n      return store.bugs.length;\n    }\n  }));\n\n  return (\n    <StoreContext.Provider value={store}>\n      {children}\n    </StoreContext.Provider>\n  )\n};\n\nconst BugsHeader = () => {\n  const store = useContext(StoreContext)\n\n  return useObserver(() => (\n    <h1>\n      {store.bugsCount} {store.bugsCount > 1 ? \"Bugs!\" : \"Bug!\"}\n    </h1>\n  ))\n}\n\nconst BugsList = () => {\n  const store = useContext(StoreContext)\n\n  return useObserver(() => (\n    <ul>\n      {store.bugs.map(bug => (\n        <li key={bug}>{bug}</li>\n      ))}\n    </ul>\n  ))\n}\n\nconst BugsForm = () => {\n  const store = useContext(StoreContext);\n  const [bug, setBug] = useState('');\n\n  return (\n    <form\n      onSubmit={e => {\n        store.addBug(bug);\n        setBug('')\n        e.preventDefault();\n      }}\n    >\n      <input type=\"text\" value={bug} onChange={e => {\n        setBug(e.target.value)\n      }}></input>\n      <button type={'submit'}>Add</button>\n    </form>\n  )\n}\n\nfunction App() {\n\n  return (\n    <StoreProvider>\n      <div className=\"App\">\n        <main>\n          <BugsHeader />\n          <BugsList />\n          <BugsForm />\n        </main>\n      </div>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}